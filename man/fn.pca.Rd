% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn.pca.R
\name{fn.pca}
\alias{fn.pca}
\title{fn.pca}
\usage{
fn.pca(doc = "fn.pca", data, GroupVar, Groups, AnalyticVars, ScreePlot = F,
  BoxPlots = F, PlotPoints = T, PlotEllipses = T,
  legendLoc = "topright", PlotHull = F, PlotMedians = F,
  Ellipses = c(0.95, 0.99), PlotColors = T, Colors = c("red", "black",
  "blue", "green", "purple"), Identify = F, folder = " ", ds.weights,
  ds.importance, ds.check)
}
\arguments{
\item{doc:}{documentation in the list returned, default is the function name}

\item{data:}{R matrix or data frame containing the data to be analyzed}

\item{GroupVar:}{name for variable defining grouping; if " ", no grouping}

\item{Groups:}{vector of values of group variable for which plots are to be done. if "All": use all groups; if " ": no grouping}

\item{AnalyticVars:}{vector of names (character values) of analytic results}

\item{Ellipses:}{value or vector of proportions for confidence ellipses default is c(.95,.99) to produce 95\% and 99\% confidence ellipses}

\item{legendLoc:}{character, location of legend for a plot with points default is "topright", alternatives are combinations of "top", "bottom", "right", "left"}

\item{PlotColors:}{if T, use list of colors in Colors for points; if F, plot points as black}

\item{Colors:}{vector of color names}

\item{Identify:}{if T, the user can identify points of interest in plots; information on these points is saved to a file; default is F}

\item{folder:}{folder in which excel files are to be stored}

\item{ds.weights:}{excel file with principal component loadings, extension.csv}

\item{ds.importance:}{excel file with percent of variation explained, extension.csv}

\item{ds.identified:}{excel file with identified points, if Identify == T}
}
\value{
The function produces a plot of the first two principal components, the contents of which are defined by the arguments PlotPoints, PlotEllipses, PlotHull, and PlotMedians. A scree plot and box plots are produced if requested.  The function returns a list with the following components:
\itemize{
  \item{usage:}{  A vector with the contents of the argument doc, the date run, the version of R used}
  \item{dataUsed:}{  The contents of the argument data restricted to the groups used}
  \item{params.grouping:}{  A list with the values of the arguments GroupVar and Groups}
  \item{params.logical:}  {A vector with the values of the arguments ScreePlot,BoxPlots,PlotPoints,PlotEllipses,PlotHull,PlotMedians,PlotColors}
  \item{analyticVars:}{  A vector with the value of the argument AnalyticVars}
  \item{ellipse.pct:}{  The value of the argument Ellipses}
  \item{Summary:}{  A list including the percent of variation explained by each principal component and the cumulative percent explained}
  \item{weights:}{  A data frame with the principal component weights for each observation}
  \item{Predicted:}{  A data frame with the predicted values for each principal component, plus the value of Groups and
  an integer GroupIndex (with values 1:number of Groups)}
  \item{DataPlusPredicted:}{  A data frame with the data used to compute the principal components, plus GroupIndex (as defined
 above) and predicted values for each principal component}
  \item{data.check:}{  If Identify=T, a data frame with the observations in dataUsed identified as of interest}
  \item{files:}{  If folder != " ", a list with path and data set names to the excel files containing weights, importance, and, if Identify=T, data for the points of interest}
 }
}
\description{
Compute and plot principal components using standardized data
}
\section{Details}{

If Identify=T, the user must interact with each plot (or pane, if there is more than one pane on a plot).
To identify a point, place the cursor as close as possible to the point and left click;  repeat if desired.
To go to the next pane, right click and select "Stop" in base R; click on "Finish" in the plot pane in Rstudio.
}

\examples{
data(ObsidianSources)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
save.pca <- fn.pca(data=ObsidianSources, GroupVar="Code",Groups="All", AnalyticVars=analyticVars)

}
