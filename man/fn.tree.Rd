% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn.tree.R
\name{fn.tree}
\alias{fn.tree}
\title{fn.tree}
\usage{
fn.tree(doc = "fn.tree", data, GroupVar, Groups = "All", AnalyticVars,
  wts = NA, plotTree = T, plotCp = T, Model, folder = " ", ds.Classify,
  ds.CpTable, ds.CVtable, ds.OptSplit)
}
\arguments{
\item{doc}{Documentation, default is fn.tree (the function name)}

\item{data}{Data frame with the data to be analyzed}

\item{GroupVar}{Name of the variable defining groups, grouping is required}

\item{Groups}{Vector of codes for groups to be used, 'All' (the default) if use all groups}

\item{AnalyticVars}{Names of analytic variables}

\item{wts}{Option to weight the observations, if used, vector with length nrow(data); if NA (the default), assume equal weights}

\item{plotTree}{If T (true, the default), plot the recursive partitioning tree}

\item{plotCp}{If T (tree, the default), plot the Cp table}

\item{Model}{A character string containing the variables considered separated by + signs}

\item{folder}{If " ", no files are written; otherwise, the path to the folder containing the excel files,
must end with two forward slashes}

\item{ds.Classify}{Name of the excel file containing the results of classifying the data, must end with .csv}

\item{ds.CpTable}{Name of the excel file containing the values of Cp at successive splits, must end with .csv}
}
\value{
The function fits a classification tree model.  The variables in AnalyticVars are considered in the order
       they appear in the Model argument (from left to right).  See the vignette for more details.
       The function returns a list with the following components:

\itemize{
  \item{usage:}{ A vector with the contents of the argument doc, the date run, the version of R used}
  \item{dataUsed:}{ The contents of the argument data restricted to the groups used}
  \item{params.grouping:}{ A list with the values of the arguments GroupVar and Groups}
  \item{analyticVars:}{ A vector with the value of the argument AnalyticVars}
  \item{params.logical:}{ The value of plotTree}
  \item{model:}{ A character string with the value of the argument Model}
  \item{classification:}  {A data frame showing the crossclassification of sources and predicted sources}
  \item{CpTable:}{  A data frame showing the decrease in Cp with increasing numbers of splits}
  \item{files:}{ If folder != " ", a character string with the path to the file containing the excel files
   defined is ds.Classify and ds.CpTable.}
 }
}
\description{
Fit a recursive partitioning model
}
\examples{
data(ObsidianSources)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
tree <- fn.tree(data=ObsidianSources, GroupVar="Code",Groups="All", AnalyticVars=analyticVars,
                Model="Sr"+"Nb"+"Rb"+"Y"+"Zr")
 # variables in the model statement in order of importance from a random forst analysis

}
