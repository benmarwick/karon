% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ps_tree.R
\name{ps_tree}
\alias{ps_tree}
\title{ps_tree}
\usage{
ps_tree(doc = "ps_tree", data, GroupVar, Groups = "All", AnalyticVars,
  wts = NA, Seed = 11111, CpDigits = 3, plotTree = TRUE,
  plotCp = TRUE, Model, ModelTitle, minSplit = 20, cP = 0.01,
  predictSources = FALSE, predictData, ID = " ", folder = " ")
}
\arguments{
\item{doc}{A string with documentation added to defintion of usage,
default is ps_tree (the function name)}

\item{data}{A data frame with the data to be analyzed}

\item{GroupVar}{The name of the variable defining groups, grouping is required}

\item{Groups}{A vector of codes for groups to be used, 'All' (the default)
if use all groups}

\item{AnalyticVars}{A vector with the names (character values) of the analytic variables}

\item{wts}{Option to weight the observations, if used, vector with length nrow(data);
if NA (the default), assume equal weights}

\item{Seed}{A positive integer, to produce a reproducible analysis}

\item{CpDigits}{The number of significant digits to display in the Cp table, default value is 3}

\item{plotTree}{Logical.  If TRUE (the default), plot the recursive partitioning tree}

\item{plotCp}{Logical.  If TRUE (the default), plot the Cp table values}

\item{Model}{A character string containing the names of the variables (characters) considered
separated by + signs}

\item{ModelTitle}{The parameter Model as a single character value}

\item{minSplit}{The minimum size of a group for splitting, default is 20
(the default in rpart())}

\item{cP}{The required improvement in Cp for a group to be split,
default is .01 (the default in rpart())}

\item{predictSources}{Logical: if TRUE, use the tree to predict sources for observations
in predictData; default is FALSE}

\item{predictData}{Data frame with data used to predict sources, must contain all variables
in AnalyticVars}

\item{ID}{If not " " (the default), the name of a variable identifying a sample in predictData}

\item{folder}{The path to the folder in which data frames will be saved; default is " "}
}
\value{
The function returns a list with the following components:

\itemize{
  \item{usage:}{ A string with the contents of the argument doc, the date run, the version of R used}
  \item{dataUsed:}{ The contents of the argument data restricted to the groups used}
  \item{params_grouping:}{ A list with the values of the arguments GroupVar and Groups}
  \item{analyticVars:}{ A vector with the value of the argument AnalyticVars}
  \item{params:}{ A list with the values of the grouping, logical, and splitting parameters}
  \item{Seed:}{ A positive integer to set the random number generator}
  \item{model:}{ A character string with the value of the argument ModelTitle}
  \item{Tree:}{ A list with details of the tree construction_}
  \item{classification:}  {A data frame showing the crossclassification of sources and predicted sources}
  \item{CpTable:}{  A data frame showing the decrease in Cp with increasing numbers of splits}
  \item{predictedSources:}{  If predictSources = T, a data frame with the predicted sources}
  \item{predictedTotals:}{  If predictedSources = T, a vector with the number of objects predicted to be from each source}
  \item{location:}{ The value of the parameter folder}
 }
}
\description{
Fit a recursive partitioning model (classification tree) to data from sources
}
\details{
The function fits a classification tree model us the R function rpart().
  The variables in AnalyticVars are considered in the order in which they appear in the
   Model argument (from left to right).  See the vignette for more details.
}
\examples{
# Analyze the obsidian source data with variables in the model statement in order of
# importance from a random forst analysis
data(ObsidianSources)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
save_tree <- ps_tree(data=ObsidianSources, GroupVar="Code",Groups="All",
AnalyticVars=analyticVars, Model = "Rb"+"Sr"+"Y"+"Zr"+"Nb",
 ModelTitle = "Sr + Nb + Rb + Y + Zr")

 #  Predict the sources of artifacts
data(ObsidianSources)
data(ObsidianArtifacts)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
save_tree <- ps_tree(data=ObsidianSources, GroupVar="Code",Groups="All",
AnalyticVars=analyticVars, Model = "Sr"+ "Nb" + "Rb" + "Y"+"Zr",
ModelTitle = "Sr + Nb + Rb + Y + Zr", predictSources=TRUE, predictData=ObsidianArtifacts,
 ID="ID", plotTree=FALSE, plotCp=FALSE)

}
