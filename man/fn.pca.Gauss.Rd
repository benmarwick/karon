% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn.pca.Gauss.R
\name{fn.pca.Gauss}
\alias{fn.pca.Gauss}
\title{fn.PCA.Gauss}
\usage{
fn.pca.Gauss(doc = "fn.pca.Gauss", data, GroupVar, Groups, AnalyticVars,
  QQtest = T, folder = " ", ds.pvalues)
}
\arguments{
\item{doc}{documentation for the analysis, default if the function name}

\item{data}{R matrix or data frame containing the data to be analyzed}

\item{GroupVar}{name for variable defining grouping, " " if no grouping}

\item{Groups}{vector of values of group variable for which
plots are to be done; if "All"', use all groups}

\item{AnalyticVars}{vector of names (character values) of analytic results}

\item{QQtest}{Logical, should plots of simulated data generated by the function qqtest be shown, default is T}

\item{folder}{folder in which the excel file is to be stored, default is " " (no file is created)}

\item{ds.pvalues}{excel file with Anderson-Darling and Mardia p-values, with
extension .csv}
}
\value{
The function produces Q-Q plots of the first two principal components for each group, and, if QQtest=T,
   confidence envelopes for the corresponding Q-Q plots based on simulated data.  The function returns a list with the
   following components:
\itemize{
  \item{"usage"}{ a vector with the contents of the argument doc, the date run, the version of R used}
  \item{"dataUsed"}{ the contents of the argument data restricted to the groups used}
  \item{"params.grouping"}{ a list with the values of the arguments GroupVar and Groups}
  \item{"analyticVars"}{ a vector with the value of the argument AnalyticVars}
  \item{"params.logical"}{ the value of QQtest}
  \item{"p.values"}{ a data frame with the p-values for the Gaussian assumptions for each group specified}
  \item{"files"}{ if folder != " ", a character string with the path to the file containing the p-values}
 }
}
\description{
Check whether first two principal components are Gaussian
}
\examples{
data(ObsidianSources)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
pca.Gauss <- fn.pca.Gauss(data=ObsidianSources, GroupVar="Code",Groups="All", AnalyticVars=analyticVars)

}
