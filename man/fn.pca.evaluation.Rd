% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fn.pca.evaluation.R
\name{fn.pca.evaluation}
\alias{fn.pca.evaluation}
\title{fn.pca.evaluation}
\usage{
fn.pca.evaluation(doc = "fn.pca.evaluation", SourceData, ArtifactData,
  ID = " ", SourceGroup, ArtifactGroup, known.sources, predicted.sources,
  AnalyticVars, Identify = F, loc.legend = "topright", plotAllPoints = T,
  plotHullsOutsidePoints = T, plotOutsidePoints = T, folder = " ")
}
\arguments{
\item{doc}{A string with documentation, default is the function name}

\item{SourceData}{A data frame with the data from known sources,
including a code for location and element analyses}

\item{ArtifactData}{The corresponding data from artifacts}

\item{ID}{The name of the ID for samples (artifacts), " " if none (default value)}

\item{SourceGroup}{The name of the variable with the code for a source}

\item{ArtifactGroup}{The name of the variable with the code for predicted source}

\item{known.sources}{A vector of the source locations to be considered}

\item{predicted.sources}{A vector of predicted sources to be considered, not all need be in known.sources}

\item{AnalyticVars}{The elements used in the principal component analyses}

\item{Identify}{Logical.  If T, the user can identify artifacts of interest and obtain a data set with information on those artifacts
(default is F)}

\item{loc.legend}{The location of legend added to plots (alternates are "topleft",
"bottomright","bottomleft")}

\item{plotAllPoints}{Logical.  If T (the default), show a plot with two panes: all source points and
the convex hulls for the sources, and all unknown points with these source hulls}

\item{plotHullsOutsidePoints}{Logical.  If T (the default), show a plot with two panes: all source points and
the convex hulls for the sources, and the unknown points lying outside of their predicted source
convex hulls and these hulls}

\item{plotOutsidePoints}{Logical.  If T (the default), show a plot with one pane: athe unknown points lying
outside of their predicted source convex hulls and these hulls (the second pane for
plotHullsOutsidePoints)}

\item{folder}{The path to the folder in which data frames will be saved; default is " "}
}
\value{
The function produces two plots: the convex hulls of the first two principal components
of the source data, and a plot with those convex hulls and the artifact data (using the weights
 obtained from the source data).  The function returns a list with the following components:

\itemize{
  \item{usage:}{  A vector with the contents of the argument doc, the date run,
  the version of R used}
  \item{sourceData:}{  The contents of the argument SourceData restricted to knownSources}
  \item{sourcesNA:}{ A data frame with source observations with missing data for analytic
  variables; NA if no missing data}
  \item{artifactData:}{  The contents of the argument ArtifactData restricted to predictedSources}
  \item{artifactsNA:}{ A data frame with artifact observations with missing data for analytic
  variables; NA if no missing data}
  \item{impError}{  Normalized root mean square error estimate for imputed data;
  NA if no missing data}
  \item{params:}{  A list with the values of the grouping and source arguments and
  values of the logical arguments}
  \item{analyticVars:}{  A vector with the value of the argument AnalyticVars}
  \item{table.in.out:} {  A data frame with counts of the numbers of artifacts inside and
  outside of each predicted source location}
  \item{pts.outside:}  {  A data frame with the data for artifact points located outside of the
   predicted source}
  \item{data.check:}{  If Identify=T, a data frame with the observations in dataUsed identified
   as of interest; value is c(NA,NA) if no points are identified}
  \item{location:}{  The value of the parameter folder}
   }
}
\description{
Create principal component plots to evaluate the predicted artifact sources
}
\details{
See the vignette for instructions for identifying points of interest using the paramter
Identify = T.
}
\examples{
# Evaluate sources of artifacts predicted from scatterplots
data(ObsidianSources)
  ArtifactData=ObsidianArtifacts, SourceGroup= "Code", ArtifactGroup="Code",
  known.sources=sources, predicted.sources=sources, AnalyticVars=analyticVars, ID="ID",
  plotAllPoints=T, plotHullsOutsidePoints = T, plotOutsidePoints = T)

# evaluate predictions from a tree model
data(ObsidianSources)
data(ObsidianArtifacts)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
sources <- unique(ObsidianSources[,"Code"])
save.tree <- fn.tree(data=ObsidianSources, GroupVar="Code",Groups="All",
  AnalyticVars=analyticVars, ID="ID", Model = "Rb"+"Sr"+"Y"+"Zr"+"Nb",
  ModelTitle="Rb + Sr + Y + Zr + Nb", predictSources=T, predictData=ObsidianArtifacts,
  plotTree=T, plotCp=F)
pca.eval <- fn.pca.evaluation(SourceData=ObsidianSources,
  ArtifactData=save.tree$predictedSources, SourceGroup= "Code", ArtifactGroup="source",
  known.sources=sources, predicted.sources=sources, AnalyticVars=analyticVars, ID="ID",
  plotAllPoints=T, plotHullsOutsidePoints = T, plotOutsidePoints = T)

# evaluate predictions from a random forest analysis: plot only points outside the predicted source hull
data(ObsidianSources)
data(ObsidianArtifacts)
analyticVars<-c("Rb","Sr","Y","Zr","Nb")
sources <- unique(ObsidianSources[,"Code"])
save.randomForest <- fn.randomForest(data=ObsidianSources, GroupVar="Code",Groups="All",
  AnalyticVars=analyticVars, artifactID="ID", NvarUsed=3, plotErrorRate=F, plotImportance=F,
  predictSources=T, predictData=ObsidianArtifacts, plotSourceProbs=F)
pca.eval <- fn.pca.evaluation(SourceData=ObsidianSources,
  ArtifactData=save.randomForest$predictedSources, SourceGroup= "Code", ArtifactGroup="source",
  known.sources=sources, predicted.sources=sources, AnalyticVars=analyticVars, ID="ID",
  plotAllPoints=F, plotHullsOutsidePoints = F, plotOutsidePoints = T)

}
